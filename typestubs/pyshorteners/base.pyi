"""
This type stub file was generated by pyright.
"""

URL_RE = ...
class BaseShortener:
    """Base Class for all shorteners.

    Keyword Args:
        proxies (dict, optional): Web proxy configuration for :ref:`Requests
            Proxies <requests:proxies>`.
        timeout (int, optional): Seconds before request is killed.
        verify (bool, str, optional): SSL Certificate verification for
            :ref:`Requests Verification <requests:verification>`.

    Example:
        >>> class NewShortener(BaseShortener):
        ...     api_url = 'http://the/link/for/the/api'
        ...     def short(self, url):
        ...         pass
        ...     def expand(self, url):
        ...         pass
        ...     def custom_method(self):
        ...         pass

    """
    def __init__(self, **kwargs) -> None:
        ...
    
    def short(self, url):
        """Shorten URL using a shortening service.

        Args:
            url (str): URL to shorten.

        Raises:
            NotImplementedError: Subclass must override.

        """
        ...
    
    def expand(self, url): # -> str:
        """Expand URL using a shortening service.

        Only visits the link, and returns the response url.

        Args:
            url (str): URL to shorten.

        Raises:
            ExpandingErrorException: URL failed to expand.

        """
        ...
    
    @staticmethod
    def clean_url(url): # -> str:
        """URL validation.

        Args:
            url (str): URL to shorten.

        Raises:
            BadURLException: URL is not valid.

        """
        ...
    


